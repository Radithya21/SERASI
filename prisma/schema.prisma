generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Pengguna {
  id_pengguna     Int             @id @default(autoincrement())
  email           String          @unique @db.VarChar(100)
  nama            String          @db.VarChar(100)
  password        String          @db.VarChar(255)
  role            String          @db.VarChar(50)
  nip             String?         @db.VarChar(20)
  telepon         String?         @db.VarChar(15)
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt

  // Relasi
  rapat_dibuat    Rapat[]         @relation("RapatCreatedBy")
  peserta_rapat   Peserta_Rapat[]
  notulen_rapat   Notulen_Rapat[]
  dokumen_rapat   Dokumen_Rapat[]
  pengumuman      Pengumuman[]
}

model Rapat {
  id_rapat        Int             @id @default(autoincrement())
  judul           String          @db.VarChar(200)
  tanggal         DateTime
  waktu_mulai     DateTime
  waktu_selesai   DateTime
  tempat          String          @db.VarChar(200)
  status          String          @db.VarChar(50)
  created_by      Int
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
  deskripsi       String?         @db.Text

  // Relasi
  pengguna        Pengguna        @relation("RapatCreatedBy", fields: [created_by], references: [id_pengguna])
  peserta_rapat   Peserta_Rapat[]
  notulen         Notulen_Rapat?
  dokumen         Dokumen_Rapat[]
  pengumuman      Pengumuman[]
}

model Peserta_Rapat {
  id_rapat          Int
  id_pengguna       Int
  status_kehadiran  String         @db.VarChar(50)
  waktu_absen       DateTime?
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt

  // Relasi
  rapat             Rapat          @relation(fields: [id_rapat], references: [id_rapat])
  pengguna          Pengguna       @relation(fields: [id_pengguna], references: [id_pengguna])

  @@id([id_rapat, id_pengguna])
}

model Notulen_Rapat {
  id_notulen     Int       @id @default(autoincrement())
  id_rapat       Int       @unique 
  isi_notulen    String    @db.LongText
  status         String    @db.VarChar(50)
  created_by     Int
  updated_at     DateTime  @updatedAt
  published_at   DateTime?

  // Relasi
  rapat          Rapat     @relation(fields: [id_rapat], references: [id_rapat])
  pengguna       Pengguna  @relation(fields: [created_by], references: [id_pengguna])
}

model Dokumen_Rapat {
  id_dokumen      Int             @id @default(autoincrement())
  id_rapat        Int
  nama_file       String          @db.VarChar(255)
  ukuran_file     Int
  tipe_file       String          @db.VarChar(50)
  uploaded_by     Int
  created_at      DateTime        @default(now())

  // Relasi
  rapat           Rapat           @relation(fields: [id_rapat], references: [id_rapat])
  pengguna        Pengguna        @relation(fields: [uploaded_by], references: [id_pengguna])
}

model Pengumuman {
  id_pengumuman     Int           @id @default(autoincrement())
  id_rapat          Int?
  judul             String        @db.VarChar(200)
  isi_pengumuman    String        @db.Text
  created_by        Int
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  // Relasi
  rapat             Rapat?        @relation(fields: [id_rapat], references: [id_rapat])
  pengguna          Pengguna      @relation(fields: [created_by], references: [id_pengguna])
}
